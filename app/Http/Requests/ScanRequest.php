<?php

namespace App\Http\Requests;

use App\Http\Requests\Request;
use App\Models\Scan;

class ScanRequest extends Request
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        $rules = [];

        if($this->route('type') == '' || $this->route('type') == 'general-information'){

            $rules = [
                'name'          => 'required|min:3',
                'profile'       => 'required|exists:profiles,id',
                'active'        => 'boolean',
                'description'   => 'max:250',
            ];

        }elseif($this->route('type') == 'schedule-settings' && !$this->request->has('_skip')) {
            $rules = [
                'repeat'        => 'in:'.implode(",", array_keys(Scan::$repeats)),
                'repeat_every'  => 'between:0,100',
                'starts_on_date'=> 'date_format:Y-m-d',
                'starts_on_time'=> 'date_format:h:i A',
                'starts_on_utc' => 'timezone'
            ];
        }elseif($this->route('type') == 'completed') {
            $rules = [
                'agree'        => 'required|accepted',
            ];
        }
        /*elseif($this->route('type') == 'scan-settings') {

            dd($this->request->all());

            //for URL Lists
            foreach ($this->session->get('scans_create.tmp_url_lists') as $index => $list) {
                $rules['url_lists.'.$index.'.url'] = 'required|url';
            }

        }*/

        return $rules;
    }

    /**
     * Get the error messages for the defined validation rules.
     *
     * @return array
     */
    public function messages()
    {
        $messages = [];

        if($this->route('type') == '' || $this->route('type') == 'general-information'){
            //TODO: messages kısımları sonra değiştirilecektir.
        }

        return $messages;
    }
}
